Specific:
☐ Implement remaining ISO-8601:2004(E) features.
	☑ Representation of dates in basic format (YYYYMMDD)
	☑ Representations of dates with reduced accuracy (YYYY-MM, YYYY, YY)
	☑ Expanded representations of dates in basic format (±Y*YYYYMMDD, ±Y*YYYY-MM, ±Y*YYYY, ±Y*YY) and extended format (±Y*YYYY-MM-DD)
	☑ Representations of ordinal dates in basic format (YYYYDDD) and extended format (YYYY-DDD).
	☑ Expanded representations of ordinal dates in basic format (±Y*YYYYDDD) and extended format (±Y*YYYY-DDD).
	☑ Representations of week dates in basic format (YYYYWwwD) and extended format (YYYY-Www-D).
	☑ Representations of week dates with reduced accuracy in basic format (YYYYWww) and extended format (YYYY-Www).
	☑ Expanded representations of week dates in basic format (±Y*YYYYWwwD, ±Y*YYYYWww) and extended format (±Y*YYYY-Www-D, ±Y*YYYY-Www).
    ☑ Representations of local time in basic format (hhmmss) and extended format (hh:mm:ss).
	☑ Representations of local time with reduced accuracy in basic format (hhmm, hh) and extended format (hh:mm).
	☑ Representations of local time with decimal fraction in basic format (hhmmss,sss*, hhmmss.sss*, hhmm,mmm*, hhmm.mmm*, hh,hhh*, hh.hhh*).
	☑ Representations of local time with time designator ("T" in front of any of the local time representations above).
	☑ Representations of midnight in basic format (240000) or extended format (24:00:00) and in all local time representations.
	☑ Representations of calender dates and time in basic format (year – month – day of the month – time designator – hour – minute – second – zone designator).
	☑ Representations of ordinal dates and time in basic and extended formats (year – day of the year – time designator – hour – minute – second – zone designator).
	☑ Representations of week dates and time in basic and extended formats (year – week designator – week – day of the week – time designator – hour – minute – second – zone).
	☑ All other date and time representations allowed (See section 4.3.3 of the standard).
	☐ Representations of time intervals by duration (Pnnn*Ynnn*Mnnn*DTnnn*Hnnn*Mnnn*S, Pnnn*W).
	☐ Reduced accuracy of representations of time intervals by duration where the lowest order components are omitted to represent reduced accuracy. Lowest order components may have a decimal fraction ("," is preferred, otherwise "."). "T" is absent if all components are absent.
	☐ Alternative format for the representation of time intervals by duration in basic format (PYYYYMMDDThhmmss, PYYYYDDDThhmmss) or extended format (PYYYY-MM-DDThh:mm:ss, PYYYY-DDDThh:mm:ss).
	☐ Representations of time intervals by start and duration in basic format (YYYYMMDDThhmmss/Pnnn*Ynnn*Mnnn*DTnnn*Hnnn*Mnnn*S, YYYYMMDDThhmmss/PYYYYMMDDThhmmss) and extended format (YYYY-MM-DDThh:mm:ss/Pnnn*Ynnn*Mnnn*DTnnn*Hnnn*Mnnn*S, YYYY-MM-DDThh:mm:ss/PYYYY-MM-DDThh:mm:ss).
	☐ Representations of time intervals by duration and end in basic format (Pnnn*Ynnn*Mnnn*DTnnn*Hnnn*Mnnn*S/YYYYMMDDThhmmss, PYYYYMMDDThhmmss/YYYYMMDDThhmmss) and extended format (Pnnn*Ynnn*Mnnn*DTnnn*Hnnn*Mnnn*S/YYYY-MM-DDThh:mm:ss, PYYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss).
	☐ All other time interval representations allowed (See sections 4.4.4.5 and 4.4.5 of the standard).
	☐ Representations of recurring time intervals in basic format (e.g. Rnn*/YYYYMMDDThhmmss/YYYYMMDDThhmmss) or extended format (Rnn*/YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss).
	☐ Representation other than complete of recurring time intervals (See section 4.5.4 of the standard).
☐ Implement ISO-8601:2004(E) tests.
	☐ Parsing calendar dates.
	☐ Parsing ordinal dates.
	☐ Parsing week dates.
	☐ Parsing times.
	☐ Parsing datetimes.
	☐ Serializing calendar dates.
	☐ Serializing ordinal dates.
	☐ Serializing week dates.
	☐ Serializing times.
	☐ Serializing datetimes.
	☐ Conversion between date types.
designator).
☐ Implement binary serialization test.
☐ Add DayOfWeek and ExtendedDateTimePrecision to readme examples.
☐ Turn ExtendedDateTime into a container for ExtendedDate and Time to allow for time-only representations and date-only representations.

Ongoing:
- Optimize (e.g. string literals, redundant code, etc.).
- Improve robustness through tests.
- Performance testing.

Undecided:
- Move scientific notation from extended datetime to a separate class.
- Change directory structure to standard structure.

Backburner:
- Add support for seasons in date arithmetic. (More difficult than it seems.)
- Add support for leap seconds (Is it even calculable?).